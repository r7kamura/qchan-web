// Generated by CoffeeScript 1.6.2
(function() {
  var Qchan, repository, token;

  Qchan = {};

  Qchan.Repositories = {};

  Qchan.Repositories.LocalStorageRepository = (function() {
    function LocalStorageRepository() {}

    LocalStorageRepository.prototype.get = function(key) {
      return window.localStorage.getItem(key);
    };

    LocalStorageRepository.prototype.set = function(key, value) {
      return window.localStorage.setItem(key, value);
    };

    return LocalStorageRepository;

  })();

  Qchan.Repository = (function() {
    function Repository() {}

    Repository.table = {};

    Repository.register = function(name, storage) {
      return this.table[name] = storage;
    };

    Repository["for"] = function(name) {
      return this.table[name];
    };

    return Repository;

  })();

  Qchan.URIFragmentParser = (function() {
    URIFragmentParser.parse = function(fragment) {
      return new this(fragment).parse();
    };

    function URIFragmentParser(fragment) {
      this.fragment = fragment;
    }

    URIFragmentParser.prototype.parse = function() {
      var key, segment, table, value, _i, _len, _ref, _ref1;

      table = {};
      _ref = this.segments();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        segment = _ref[_i];
        _ref1 = segment.split('=', 2), key = _ref1[0], value = _ref1[1];
        if (value) {
          table[key] = window.decodeURIComponent(value);
        }
      }
      return table;
    };

    URIFragmentParser.prototype.segments = function() {
      return this.fragment.substr(1).split('&');
    };

    return URIFragmentParser;

  })();

  Qchan.Repository.register('user', new Qchan.Repositories.LocalStorageRepository());

  repository = Qchan.Repository["for"]('user');

  switch (false) {
    case !repository.get('accessToken'):
      console.log('Access token already exists');
      break;
    case !(token = Qchan.URIFragmentParser.parse(window.location.hash).access_token):
      repository.set('accessToken', token);
      console.log('Access token was set');
      break;
    default:
      console.log('No access token given!');
  }

}).call(this);
